version: '3.8'

services:
  # PostgreSQL Database for Customer Service
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: customerdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # MongoDB for Statistics Service
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: statisticsdb
    volumes:
      - mongo_data:/data/db
    networks:
      - microservices-network

  # Customer Service
  customer-service:
    build: ./customer-service
    container_name: customer-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/customerdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - postgres
    networks:
      - microservices-network

  # Statistics Service
  statistics-service:
    build: ./statistics-service
    container_name: statistics-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/statisticsdb?authSource=admin
      CUSTOMER_SERVICE_URL: http://customer-service:8081
    depends_on:
      - mongodb
      - customer-service
    networks:
      - microservices-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
    depends_on:
      - customer-service
      - statistics-service
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
